# ref: https://github.com/actions/runner-images
# ref: https://github.com/actions/partner-runner-images
name: GitHub-hosted runners

on: [push, pull_request, workflow_dispatch]

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

# Building using the github runner environement directly.
jobs:
  linux:
    strategy:
      matrix:
        runner: [
          ubuntu-latest,
          ubuntu-24.04, # ubuntu-latest
          ubuntu-22.04,
          ubuntu-24.04-arm, # partner runner image in Beta
          ubuntu-22.04-arm # partner runner image in Beta
        ]
      fail-fast: false # Don't cancel all jobs if one fails.
    name: Linux(${{matrix.runner}})
    runs-on: ${{matrix.runner}}
    steps:
      - uses: actions/checkout@v5
      - name: Hardware
        run: |
          cat /proc/cpuinfo | grep "flags" || true
          lscpu || true
      - name: env
        run: env
      - name: Update PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH
      # Base
      - name: Git
        run: git --version
      - name: Make
        run: make --version
      - name: CMake
        run: |
          cmake -version
          cmake -G || true
      - name: C Compilers
        run: |
          gcc --version
          g++ --version
          clang --version
      - name: CCache
        run: ccache --version || true
      # Java
      - name: Java
        run: mvn --version
      # .Net
      - name: .NET
        run: dotnet --info
      # Python
      - name: Python
        run: |
          python --version
          python -m site --user-base
          pip --version
      - name: Python3
        run: |
          python3 --version
          python3 -m site --user-base
          pip3 --version

  macos:
    strategy:
      matrix:
        runner: [
          macos-latest, # M1
          macos-15-intel,
        ]
      fail-fast: false # Don't cancel all jobs if one fails.
    name: MacOS(${{matrix.runner}})
    runs-on: ${{matrix.runner}}
    steps:
      - uses: actions/checkout@v5
      - name: Hardware
        run: |
          cat /proc/cpuinfo | grep "flags" || true
          lscpu || true
          sysctl -a | grep machdep.cpu.features | cut -f2 -d: | tr . _
      - name: env
        run: env
      # Base
      - name: Git
        run: git --version
      - name: Make
        run: make --version
      - name: Install brew Make
        run: |
          brew install make
          echo "/usr/local/opt/make/libexec/gnubin" >> $GITHUB_PATH
      - name: Make
        run: make --version
      - name: CMake
        run: |
          cmake -version
          cmake -G || true
      - name: GCC
        run: |
          gcc --version
          g++ --version
          clang --version
      - name: CCache
        run: ccache --version || true
      # .Net
      - name: .NET
        run: dotnet --info
      # Java
      - name: Java
        run: mvn --version
      # Python
      - name: Python
        run: |
          python --version
          python -m site --user-base
          pip --version
      - name: Python3
        run: |
          python3 --version
          python3 -m site --user-base
          pip3 --version

  windows:
    strategy:
      matrix:
        runner: [
          windows-latest,
          windows-2025,
          windows-2022, # windows-latest
          #windows-2019, # deprecated
        ]
      fail-fast: false # Don't cancel all jobs if one fails.
    name: Windows(${{matrix.runner}})
    runs-on: ${{matrix.runner}}
    steps:
      - uses: actions/checkout@v5
      - name: env
        run: "Get-ChildItem Env:"
      # Base
      - name: Git
        run: git --version
      - name: Make
        run: make --version
      - name: CMake
        shell: bash
        run: |
          cmake -version
          cmake -G || true
      - name: CCache
        shell: bash
        run: ccache --version || true
      # .Net
      - name: .NET
        run: dotnet --info
      # Java
      - name: Java
        run: mvn --version
      # Python
      #- uses: actions/setup-python@v2
      #  with:
      #    python-version: '3.10'
      - name: Python
        run: |
          python --version
          python -m site --user-base
          pip --version
      - name: Python3
        run: |
          python3 --version
          python3 -m site --user-base
          pip3 --version
